version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Update yarn lockfile
          command: ./node_modules/.bin/greenkeeper-lockfile-update
      - run:
          name: Upload yarn lockfile
          command: ./node_modules/.bin/greenkeeper-lockfile-upload
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # - run: yarn tsc
      # - run: yarn test --runInBand
      # - run: mkdir junit && mv test-report.xml junit
      # - store_test_results:
      #     path: test-results

  typescript_check:
    docker:
      - image: circleci/node:8.9

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn tsc

  test:
    docker:
      - image: circleci/node:8.9
    # parallelism: 3

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      # - run: npm test --silent -- --listTests > test_filenames.txt
      # - run: yarn test --runInBand --findRelatedTests $(circleci tests split --total=3 test_filenames.txt | tr '\r\n' ' ') --testResultsProcessor="./node_modules/jest-junit-reporter"
      - run: yarn test --runInBand --testResultsProcessor="./node_modules/jest-junit-reporter"
      - run: mkdir test-results && mv test-report.xml test-results
      - store_test_results:
          path: test-results

  deploy_testflight:
    docker:
      - image: circleci/node:8.9
    # parallelism: 3

    working_directory: ~/repo
    steps:
      - checkout
  
  deploy_codepush_staging:
    docker:
      - image: circleci/node:8.9
    # parallelism: 3

    working_directory: ~/repo
    steps:
      - checkout

workflows:
  version: 2
  build_and_test:
    jobs:
      # - build
      # - typescript_check:
      #     requires:
      #       - build
      # - test:
      #     requires:
      #       - build


      - hold_testflight:
          type: approval
          # requires:
          #  - typescript_check
          #  - test
      - deploy_testflight:
          requires:
            - hold_testflight


      - hold_codepush_staging:
          type: approval
          # requires:
          #  - typescript_check
          #  - test
      - deploy_codepush_staging:
          requires:
            - hold_codepush_staging
            
